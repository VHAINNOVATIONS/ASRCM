/*
 * Build script for Surgical Risk Calculator Prototype.
 */

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse-wtp'
// Generates code coverage report. Run task 'jacocoTestReport' to do so.
apply plugin: 'jacoco'

// Basic build properties
sourceCompatibility = '1.7'
version = '0.7.0-alpha'

repositories {
    // Use 'maven central' for resolving dependencies.
    mavenCentral()
}

/* Versions of dependencies */
def springVersion = '4.0.7.RELEASE'
def springSecurityVersion = '3.2.5.RELEASE'
def slf4jVersion = '1.7.10'

configurations {
    // Don't ever depend on commons-logging, we use jcl-over-sl4j instead.
    all*.exclude module: 'commons-logging'
    
    // Annoyingly, the servlet-api changed its name from servlet-api in 2.x to
    // javax.servlet-api in 3.x. This prevents Gradle's version conflict
    // resolution from automatically choosing the right version. Manually
    // exclude the old 2.x versions.
    all*.exclude group: 'javax.servlet', module: 'servlet-api'
    
    // We use the log4j binding in the tests, so exclude the JUL binding.
    testRuntime.exclude module: 'slf4j-jdk14'
    
    // Add a "deployed" configuration. Dependencies in this configuration will
    // _only_ be included in the WAR and not in unit tests, etc.
    deployed
}

dependencies {

    /* Java EE 6 dependencies */

    // Provided by the container (Glassfish 3.1). Unfortunately the
    // javaee-web-api JAR breaks unit tests, so manually specify the versions
    // of the various specs. (See <http://www.adam-bien.com/roller/abien/entry/trouble_with_crippled_java_ee>)
    providedCompile 'javax.servlet:javax.servlet-api:3.0.1'
    providedCompile 'javax.inject:javax.inject:1'
    providedCompile 'org.glassfish.main.connectors:javax.resource:3.1.2.2'
    providedCompile 'javax.validation:validation-api:1.0.0.GA'
    providedCompile 'javax.servlet.jsp:jsp-api:2.2'
    providedCompile 'javax.servlet.jsp.jstl:jstl-api:1.2'
    // These VistALink JARs represent the dependency on the VistALink Connector,
    // which must be deployed before this application.
    providedCompile files('../lib/vljFoundationsLib-1.6.0.028.jar', '../lib/vljConnector-1.6.0.028.jar')

    // Give Eclipse the JSTL TLDs. They aren't included in the javaee-web-api
    // JAR.
    providedRuntime 'org.glassfish.web:javax.servlet.jsp.jstl:1.2.1'
	
	/* Other libraries */

    compile group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion
    compile group: 'org.slf4j', name: 'jcl-over-slf4j', version: slf4jVersion
    compile 'org.hibernate:hibernate-core:4.2.13.Final'
	compile group: 'org.springframework', name: 'spring-core', version: springVersion
	compile group: 'org.springframework', name: 'spring-context', version: springVersion
	compile group: 'org.springframework', name: 'spring-webmvc', version: springVersion
	compile group: 'org.springframework', name: 'spring-orm', version: springVersion
	compile group: 'org.springframework.security', name: 'spring-security-web', version: springSecurityVersion
	compile group: 'org.springframework.security', name: 'spring-security-taglibs', version: springSecurityVersion
	compile 'joda-time:joda-time:2.3'
	compile 'org.apache.commons:commons-lang3:3.3.2'

    // Spring-Security XML namespace
	runtime group: 'org.springframework.security', name: 'spring-security-config', version: springSecurityVersion
	runtime 'com.fasterxml.jackson.core:jackson-databind:2.3.5' 
    
    /* Test dependencies */

    testCompile 'junit:junit:4.11'
    testCompile 'org.mockito:mockito-core:1.9.5'
	testCompile group: 'org.springframework', name: 'spring-test', version: springVersion
	testCompile 'nl.jqno.equalsverifier:equalsverifier:1.5'
	testCompile 'org.hamcrest:hamcrest-library:1.3'
	testCompile 'org.hsqldb:hsqldb:2.3.2'
	// Versions higher than 0.9.1 will not work with the current spring code
	testCompile 'com.jayway.jsonpath:json-path:0.9.1'
    
    // The deployed app uses java.util.logging, but use log4j 1.2 in the tests
    // because the former is so hard to configure. See the slf4j-jdk14 exclusion
    // above. (Note: we cannot use log4j 2.x due to Hibernate's lack of support.)
    testRuntime group: 'org.slf4j', name: 'slf4j-log4j12', version: slf4jVersion
    
    // Uncomment this to enable testing against MySQL.
    //testRuntime 'mysql:mysql-connector-java:5.1.34'

    // Direct logging to java.util.logging so that it ends up in the Glassfish
    // log.
    deployed group: 'org.slf4j', name: 'slf4j-jdk14', version: slf4jVersion
}

compileJava {
    // Warn about deprecated API usage.
    options.deprecation = true
}    

war {
    manifest {
        // Bake in some standard properties in the manifest
        attributes 'Implementation-Title': 'Automated Surgical Risk Calculator', 'Implementation-Version': version
    }
    // Add the "deployed" configuration to the WAR.
    classpath configurations.deployed
    // Omit the version number from the WAR name. Nobody uses the WAR as a
    // dependency so it provides no value and only complicates deployment
    // scripts, etc.
    archiveName = "${baseName}.${extension}"
}

eclipse {
    // Hardcode Eclipse servlet spec version because eclipse-wtp just assumes
    // 2.4.
    //
    // Note: we cannot ugprade to Gradle 2.3 because it breaks the below
    // configuration. See <http://tinyurl.com/nsrmd6n>.
    wtp {
	facet {
	    facet name: 'jst.web', version: '3.0'
	}
    }

    // Fix "Web App Libraries" order. See <http://tinyurl.com/pln53lc>.
    classpath.file {
        withXml { xml ->
            def node = xml.asNode()
            node.remove( node.find { it.@path == 'org.eclipse.jst.j2ee.internal.web.container' } )
            node.appendNode( 'classpathentry', [ kind: 'con', path: 'org.eclipse.jst.j2ee.internal.web.container', exported: 'true'])
        }
    }
}

