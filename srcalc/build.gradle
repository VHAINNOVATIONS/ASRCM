/*
 * Build script for Surgical Risk Calculator Prototype.
 */

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse-wtp'
// Generates code coverage report. Run task 'jacocoTestReport' to do so.
apply plugin: 'jacoco'

// Basic build properties
sourceCompatibility = '1.7'
version = '0.6.0-alpha'

repositories {
    // Use 'maven central' for resolving dependencies.
    mavenCentral()
}

/* Versions of dependencies */
def springVersion = '4.0.7.RELEASE'
def springSecurityVersion = '3.2.5.RELEASE'
def slf4jVersion = '1.7.10'

configurations {
    // Don't ever depend on commons-logging, we use jcl-over-sl4j instead.
    all*.exclude module: 'commons-logging'
    
    // org.glassfish.web:javax.servlet.jsp.jstl tries to include these, but we
    // want them 'provided' scope.
    runtime.exclude module: 'servlet-api'
}

dependencies {

    /* Java EE 7 dependencies */

    // Provided by the container (Glassfish).
    providedCompile 'javax:javaee-web-api:7.0'
    // This is in the Web Profile; I don't know why it isn't included in the
    // above library.
    providedCompile 'javax.resource:javax.resource-api:1.7'
    // Give Eclipse the JSTL TLDs. They aren't included in the javaee-web-api
    // JAR.
    providedCompile 'org.glassfish.web:javax.servlet.jsp.jstl:1.2.1'
    // These VistALink JARs represent the dependency on the VistALink Connector,
    // which must be deployed before this application.
    providedCompile files('../lib/vljFoundationsLib-1.6.0.028.jar', '../lib/vljConnector-1.6.0.028.jar')
	
	/* Other libraries */

    compile group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion
    compile group: 'org.slf4j', name: 'jcl-over-slf4j', version: slf4jVersion
    compile 'org.hibernate:hibernate-core:4.2.13.Final'
	compile group: 'org.springframework', name: 'spring-core', version: springVersion
	compile group: 'org.springframework', name: 'spring-context', version: springVersion
	compile group: 'org.springframework', name: 'spring-webmvc', version: springVersion
	compile group: 'org.springframework', name: 'spring-orm', version: springVersion
	compile group: 'org.springframework.security', name: 'spring-security-web', version: springSecurityVersion
	compile group: 'org.springframework.security', name: 'spring-security-taglibs', version: springSecurityVersion
	compile 'joda-time:joda-time:2.3'

    // Direct logging to java.util.logging so that it ends up in the Glassfish
    // log.
    compile group: 'org.slf4j', name: 'slf4j-jdk14', version: slf4jVersion
    // Spring-Security XML namespace
	runtime group: 'org.springframework.security', name: 'spring-security-config', version: springSecurityVersion
	runtime 'com.fasterxml.jackson.core:jackson-databind:2.3.5' 
    
    /* Test dependencies */

    testCompile 'junit:junit:4.11'
    testCompile 'org.mockito:mockito-core:1.9.5'
	testCompile group: 'org.springframework', name: 'spring-test', version: springVersion
	testCompile 'nl.jqno.equalsverifier:equalsverifier:1.5'
	testCompile 'org.hamcrest:hamcrest-library:1.3'
	testCompile 'org.hsqldb:hsqldb:2.3.2'
    // This is necessary to complete some of the missing pieces in javaee-web-api.
    testRuntime 'javax.servlet:javax.servlet-api:3.1.0'
    
    // VistALink has a hard dependency on log4j. Since we are using a direct
    // file dependency on VistALink, provide this transitive dependency here to
    // be able to run the tests.
    testRuntime group: 'org.slf4j', name: 'log4j-over-slf4j', version: slf4jVersion
    
    // Uncomment this to enable testing against MySQL.
    //testRuntime 'mysql:mysql-connector-java:5.1.34'
}

war {
    manifest {
        // Bake in some standard properties in the manifest
        attributes 'Implementation-Title': 'Automated Surgical Risk Calculator', 'Implementation-Version': version
    }
    // Omit the version number from the WAR name. Nobody uses the WAR as a
    // dependency so it provides no value and only complicates deployment
    // scripts, etc.
    archiveName = "${baseName}.${extension}"
}

// Hardcode Eclipse servlet spec version because eclipse-wtp just assumes 2.4.
eclipse {
    wtp {
	facet {
	    facet name: 'java', version: sourceCompatibility
	    facet name: 'jst.web', version: '3.0'
	}
    }

    // Fix "Web App Libraries" order. See <http://gsfn.us/t/3jk71>.
    classpath.file {
        withXml { xml ->
            def node = xml.asNode()
            node.remove( node.find { it.@path == 'org.eclipse.jst.j2ee.internal.web.container' } )
            node.appendNode( 'classpathentry', [ kind: 'con', path: 'org.eclipse.jst.j2ee.internal.web.container', exported: 'true'])
        }
    }
}

