<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd">
       
    <!--
    Enable Web MVC.

    * Don't preserve the Spring model on redirects per Spring's current
      recommendation for new applications. This prevents model attributes from
      mysteriously showing up in a redirect URL.
    -->
    <mvc:annotation-driven
        ignore-default-model-on-redirect="true" />
       
    <!--  *** Controllers *** -->
    
    <!-- Use component scanning for now, but only to find Controllers. -->
    <context:component-scan base-package="gov.va.med.srcalc.web.controller">
        <context:include-filter type="annotation"
            expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    
    <!-- Activate the CommonAttributesAdvice. -->
    <!-- Note that @Autowired and @Inject don't seem to work on factory methods
         so explicity specify autowire="constructor" here. -->
    <bean id="commonAttributesAdvice"
        class="gov.va.med.srcalc.web.controller.CommonAttributesAdvice"
        factory-method="fromServletContext" autowire="constructor"  />
    
    <!-- *** Views *** -->
    <bean id="viewResolver"
        class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/WEB-INF/views/"/>
    </bean>
    
    <!-- Support CSS and JS via Spring (because we make Spring the default serlvet. -->
    <!-- Force the browser to always check for new versions until we implement
         a versioning system. Note that cache-period=1 allows for caching while
         still forcing the browser to check for a new version, while a value of
         0 completely prevents caching. -->
    <mvc:resources mapping="/css/**" location="/css/" cache-period="1" />
    <mvc:resources mapping="/js/**" location="/js/" cache-period="1" />

</beans>